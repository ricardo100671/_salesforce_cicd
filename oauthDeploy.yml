name: Salesforce Metadata Deploy
description: Builds and deploys metadata to a specified environment
author: ricardo100671
branding:
  icon: code
  color: blue
inputs:
  dryRun:
    description: "Validate deploy and run Apex tests but don't save to the org."
    type: boolean
    default: true
  testLevel:
    description: "Deployment Apex testing level."
    type: choice
    default: RunLocalTests
    options:
      - NoTestRun
      - RunSpecifiedTests
      - RunLocalTests
      - RunAllTestsInOrg
  path:
    description: "Path to the local source files to deploy."
    type: string
    default: force-app/**
  sfConsumerKey
    description: "The Org's Github Connect App Consumer Key"
    type: string
    required: true

runs:
  using: "composite"
  steps:
    - name: Install Salesforce CLI
      shell: bash
      run:
        npm install -g @salesforce/cli
        sf --version

    - name: Login with OAut jwt
      shell: bash
      run: 
        echo Loggin in
        echo "${{ secrets.CERT_PRIVATE_KEY }}" > server.key
        sf force auth jwt grant --client-id=${{ inputs.sfConsumerKey }} --jwt-key-file=server.key --username=${{ secrets.SF_USER }}

    - name: Generate package.xml
      shell: bash
      run: |
        echo Generating Manifest
        sf project generate manifest --source-dir ${{ inputs.path }} --output-dir manifest     

    - name: Deploy to Environment
      shell: bash
      run: |
        echo Deploying
        deployFlags=(
            --manifest manifest/package.xml
            --wait 30
            --test-level ${{ inputs.testLevel }}
            --verbose
          )
        if [ "${{ inputs.dryRun }}" = "true" ]; then
          deployFlags+=( --dry-run )
        fi
        sf project deploy start "${deployFlags[@]}" -u ${{ secrets.SF_USER }}

    - name: Logout
      shell: bash
      run: 
        sfdx force auth logout -u ${{ secrets.SF_USER }}
        echo Logged out
